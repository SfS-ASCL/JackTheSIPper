# nginx configuration file for the LRS
# C. Zinn
#
# mainly used to reverse-proxy various requests
#
#

#user  nobody;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
#error_log  /var/log/error.log  notice;
#error_log  logs/error.log  info;

#error_log /var/log/nginx/error.log debug;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    gzip       on;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_proxied any;

    server {

        listen       80;
        server_name  localhost;

        # this is hard, depends on mimetype; wav files are usually bigger
        # set client body size to 3M #
        # (this is also WebLicht's file limit)
        client_max_body_size 16M;
        #charset koi8-r;    

        location / {
	    root   html;    
            index  index.html index.htm;
        }

        location /weblicht-sfs-nextcloud/s {
            proxy_pass https://weblicht.sfs.uni-tuebingen.de/nextcloud;
	}
	
        # CZ: pointing to the locally installed (@ SfS Tuebingen) Nextcloud instance
        location /nextcloud {
            proxy_pass https://weblicht.sfs.uni-tuebingen.de/nextcloud;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
     }
}